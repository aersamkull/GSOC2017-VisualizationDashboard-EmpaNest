[{"id":"d39a7d82.005a2","type":"ui_button","z":"134033fa.c8fdfc","name":"MONTH","group":"b45303cc.ce698","order":8,"width":"3","height":"1","passthru":false,"label":"Month","color":"","bgcolor":"","icon":"","payload":"_month","payloadType":"str","topic":"MONTH","x":159,"y":366,"wires":[["cbd98295.9d348"]]},{"id":"995739d2.da1f28","type":"ui_button","z":"134033fa.c8fdfc","name":"Week","group":"b45303cc.ce698","order":9,"width":"3","height":"1","passthru":false,"label":"Week","color":"","bgcolor":"","icon":"","payload":"_week","payloadType":"str","topic":"Week","x":301,"y":365,"wires":[["cbd98295.9d348"]]},{"id":"5a76c6ff.c3b548","type":"ui_button","z":"134033fa.c8fdfc","name":"Day","group":"b45303cc.ce698","order":10,"width":"3","height":"1","passthru":false,"label":"Day","color":"","bgcolor":"","icon":"","payload":"_date","payloadType":"str","topic":"Day","x":422,"y":362,"wires":[["cbd98295.9d348"]]},{"id":"bf1e97fb.8be948","type":"ui_button","z":"134033fa.c8fdfc","name":"Hour","group":"b45303cc.ce698","order":11,"width":"3","height":"1","passthru":false,"label":"Hour","color":"","bgcolor":"","icon":"","payload":"_hour","payloadType":"str","topic":"Hour","x":538,"y":362,"wires":[["cbd98295.9d348"]]},{"id":"27640373.486e8c","type":"ui_button","z":"134033fa.c8fdfc","name":"Year","group":"b45303cc.ce698","order":7,"width":"3","height":"1","passthru":false,"label":"Year","color":"","bgcolor":"","icon":"","payload":"_year","payloadType":"str","topic":"Year","x":659,"y":361,"wires":[["cbd98295.9d348"]]},{"id":"cbd98295.9d348","type":"function","z":"134033fa.c8fdfc","name":"Filter","func":"global.set(\"filter\",msg.payload);\nreturn msg;\n","outputs":1,"noerr":0,"x":583,"y":512,"wires":[["f486dc2.9481d2","261c07ac.5f83b8"]]},{"id":"d72fbbc6.455c08","type":"ui_button","z":"134033fa.c8fdfc","name":"download","group":"78c97882.c8d7d8","order":6,"width":"1","height":"1","passthru":false,"label":"","color":"","bgcolor":"","icon":"fa-arrow-down","payload":"download","payloadType":"str","topic":"","x":158,"y":496,"wires":[[]]},{"id":"9a76177e.6ac548","type":"debug","z":"134033fa.c8fdfc","name":"highcharts","active":true,"console":"false","complete":"payload","x":1104.1666564941406,"y":1312.9999828338623,"wires":[]},{"id":"355bc9e2.a11ee6","type":"ui_template","z":"134033fa.c8fdfc","group":"53849b89.4fa1b4","name":"Highcharts","order":7,"width":"0","height":"0","format":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n</head>\n<body>\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\n<div id=\"container\" style=\"min-width: 1500px; height: 450px; margin: 0 auto\"></div>\n<script>\n(function(scope) {\n        scope.$watch('msg.payload', function(dataseries) {\n          \n    Highcharts.chart('container', {\n    chart: {\n        backgroundColor:{\n         linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n         stops: [\n            [0, '#121212'],\n            [1, '#121212']\n         ]\n      },\n       style: {\n         fontFamily: '\\'Unica One\\', sans-serif'\n      },\n      plotBorderColor: '#606063',\n        type: 'column'\n    },\n    colors: ['#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066', '#eeaaee',\n      '#55BF3B', '#DF5353', '#7798BF', '#aaeeee', '#2b908f'],\n    title: {\n        style: {\n         color: '#E0E0E3',\n      },\n        text: dataseries[3]\n    },\n    subtitle: {\n        style: {\n         color: '#E0E0E3',\n      },\n        text: dataseries[4]\n    },\n    xAxis: {\n        gridLineColor: '#707073',\n      labels: {\n         style: {\n            color: '#E0E0E3',\n            fontSize: '10px'\n         }\n      },\n      lineColor: '#707073',\n      minorGridLineColor: '#505053',\n      tickColor: '#707073',\n      title: {\n         style: {\n            color: '#A0A0A3',\n            fontSize: '10px'\n         }\n      },\n        \n        categories:dataseries[1],\n        crosshair: true\n    },\n    yAxis: {\n        gridLineColor: '#707073',\n      labels: {\n         style: {\n            color: '#E0E0E3',\n            fontSize : '10px'\n         }\n      },\n      lineColor: '#707073',\n      minorGridLineColor: '#505053',\n      tickColor: '#707073',\n      tickWidth: 1,\n      title: {\n          text: 'Average Value',\n         style: {\n            color: '#A0A0A3',\n            fontSize: '12px'\n         }\n      }\n        //min: -10\n    },\n    tooltip: {\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n            '<td style=\"padding:0\"><b>{point.y:.1f}'+dataseries[5]+'</b></td></tr>',\n        footerFormat: '</table>',\n        shared: true,\n        useHTML: true,\n        backgroundColor: 'rgba(0, 0, 0, 0.85)',\n      style: {\n         color: '#F0F0F0'\n      }\n    },\n    plotOptions: {\n        column: {\n            pointPadding: 0.2,\n            borderWidth: 0\n        },\n        series: {\n         dataLabels: {\n            color: '#B0B0B3'\n         },\n         marker: {\n            lineColor: '#333'\n         }\n      },\n      boxplot: {\n         fillColor: '#505053'\n      },\n      candlestick: {\n         lineColor: 'white'\n      },\n      errorbar: {\n         color: 'white'\n      }\n    },\n    legend: {\n      itemStyle: {\n         color: '#E0E0E3'\n      },\n      itemHoverStyle: {\n         color: '#FFF'\n      },\n      itemHiddenStyle: {\n         color: '#606063'\n      }\n   },\n   credits: {\n      style: {\n         color: '#666'\n      }\n   },\n   labels: {\n      style: {\n         color: '#707073'\n      }\n   },\n\n    series: [ {\n        name: dataseries[6],\n        data: dataseries[0]\n    }]\n});\n        });\n    })(scope);\n</script>\n\n</body>\n</html>","storeOutMessages":true,"fwdInMessages":true,"x":1104.1666526794434,"y":1232.3334274291992,"wires":[["1252a86.edd6558"]]},{"id":"a6c27572.a47b38","type":"MSSQL","z":"134033fa.c8fdfc","mssqlCN":"9534cec8.3799d","name":"NEST","query":"","outField":"payload","x":747.5302963256836,"y":1205.8940124511719,"wires":[["d039afba.ec8c1","9a10b2e4.040f"]]},{"id":"d039afba.ec8c1","type":"debug","z":"134033fa.c8fdfc","name":"DB data","active":true,"console":"false","complete":"payload","x":894.2576713562012,"y":1191.9546813964844,"wires":[]},{"id":"9a10b2e4.040f","type":"function","z":"134033fa.c8fdfc","name":"Data Converter","func":"var numericID = global.get(\"numericID\") ;\nnumericID = \"NumericID = \"+ numericID;\nvar desc = global.get(\"desc\");\nvar year = global.get(\"year\");\nvar filter = global.get(\"filter\");\nvar StartDate = global.get(\"StartDate\");\nvar EndDate = global.get(\"EndDate\");\nyear = filter+ \" wise value for \"+ desc + \" (\" + numericID  +\")\";\nvar subtitle = \"StartDate = \"+ \"'\"+StartDate + \"'\"+\"  and  EndDate = \"+ \"'\"+EndDate +\"'\"+ \"  Empa NEST\";\nvar unit = global.get(\"unit\");\nvar data = msg.payload;\nvar value = [];\nvar date = [];\nvar monthmap = [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'];\n\nfor(var i = 0; i < data.length;i++){\n    value.push(data[i].avg_temp);\n        \n    if(filter == '_month'){\n        date.push(monthmap[data[i]._month-1]);\n    }\n    else if(filter == '_year'){\n        date.push(data[i]._year);\n    }\n    else if(filter == '_week'){\n        date.push(data[i]._week);\n    }\n    else if(filter == '_date'){\n        date.push(data[i]._date);\n    }\n    else if(filter == '_hour'){\n        date.push(data[i]._hour);\n    }\n    else if(filter == '_hourtrend'){\n        date.push(data[i]._hourtrend);\n    }\n}\nmsg.payload = [value,date,numericID,year,subtitle,unit,desc];            \nreturn msg;","outputs":1,"noerr":0,"x":910.8941040039062,"y":1260.9546852111816,"wires":[["9a76177e.6ac548","355bc9e2.a11ee6"]]},{"id":"50707b6.64fa084","type":"ui_button","z":"134033fa.c8fdfc","name":"refresh","group":"78c97882.c8d7d8","order":5,"width":"1","height":"1","passthru":false,"label":"","color":"","bgcolor":"","icon":"cached","payload":"","payloadType":"date","topic":"","x":159,"y":627,"wires":[["7938a55.ce10a5c","4397338d.2f7bbc","790e43e9.64d75c","6214d147.72cb5"]]},{"id":"261c07ac.5f83b8","type":"function","z":"134033fa.c8fdfc","name":"query","func":"\n\nvar numericID = global.get(\"numericID\") ;\nvar year = global.get(\"year\");\nvar StartDate = global.get(\"StartDate\");\nvar EndDate = global.get(\"EndDate\");\nvar filter = global.get(\"filter\");\nvar condition = \"\";\nif (numericID == 3200000){\n    condition = \" AND  TRY_CAST(_VALUE AS FLOAT) < 100 \";\n}\n\n\n\nvar q1 = \"SELECT AVG(avg_value) as avg_temp, \"+filter+\" FROM ( \"+\n\"SELECT  AVG(TRY_CAST(_VALUE as FLOAT)) as avg_value ,DATEPART( year, _TIMESTAMP ) as _year, \"+\n\"DATEPART( month, _TIMESTAMP ) as _month, DATEPART( week, _TIMESTAMP ) as _week, DATEPART( day, _TIMESTAMP ) as _day ,  FORMAT(_TIMESTAMP, 'yyyy-MM-dd') as _date \"+\n\"FROM \"+ \"[NestTest].[dbo].[KepMET51] \"+  \n\"where kepMet51._NUMERICID=\" + numericID + condition +\n\"AND _TIMESTAMP >= '\"+ StartDate + \"' AND _TIMESTAMP <= '\"+ EndDate+\n\"' GROUP BY DATEPART( year, _TIMESTAMP ), DATEPART( month, _TIMESTAMP ) , DATEPART( week, _TIMESTAMP ), DATEPART( day, _TIMESTAMP ), FORMAT(_TIMESTAMP, 'yyyy-MM-dd')) as ID \"+\n\"group by \" ;\n\nif(numericID == 401191000 || numericID == 42100068){\n    if(numericID == 401191000){\n        var db = '[dbo].[KepElEnergy]';\n    }\n    else if(numericID == 42100068 ){\n        db = '[dbo].[KepEnergyUnits]';\n    }\n\tif(filter == '_year'){\n\t\tq1 = \"SELECT  TRY_CAST([_Max] AS FLOAT)-TRY_CAST([_Min] AS FLOAT) as avg_temp, _year from \"+\n  \t\t \"( select  distinct DATEPART( year, _TIMESTAMP ) as _year, \"+\n         \"first_value(_VALUE) over (partition by DATEPART( year, _TIMESTAMP ) order by _TIMESTAMP) as [_Min] \"+\n\t\t \", first_value(_VALUE) over (partition by DATEPART( year, _TIMESTAMP ) order by _TIMESTAMP desc) as [_Max] \"+\n\t\t \" from \"+ db+ \" where _NUMERICID =\" + numericID+\n\t\t \" AND _TIMESTAMP >= '\"+ StartDate + \"' AND _TIMESTAMP <= '\"+ EndDate+ \"'\"+\n\t\t \" AND TRY_CAST(_VALUE AS FLOAT) < 10000000 ) as ID \"+\n\t\t \" order by _year asc\";\n\t}\n\telse if(filter == '_month'){\n\t\tq1 = \"SELECT  TRY_CAST([_Max] AS FLOAT)-TRY_CAST([_Min] AS FLOAT) as avg_temp, _month from \"+\n  \t\t \"( select  distinct DATEPART( month, _TIMESTAMP ) as _month, \"+\n         \"first_value(_VALUE) over (partition by DATEPART( month, _TIMESTAMP ) order by _TIMESTAMP) as [_Min] \"+\n\t\t \", first_value(_VALUE) over (partition by DATEPART( month, _TIMESTAMP ) order by _TIMESTAMP desc) as [_Max] \"+\n\t\t \" from  \"+ db+ \" where _NUMERICID =\" + numericID+\n\t\t \" AND _TIMESTAMP >= '\"+ StartDate + \"' AND _TIMESTAMP <= '\"+ EndDate+ \"'\"+\n\t\t \" AND TRY_CAST(_VALUE AS FLOAT) < 10000000 ) as ID \"+\n\t\t \" order by _month asc\";\n\n\t}\n\telse if(filter == '_week'){\n\t\tq1 = \"SELECT  TRY_CAST([_Max] AS FLOAT)-TRY_CAST([_Min] AS FLOAT) as avg_temp, _week from \"+\n  \t\t \"( select  distinct DATEPART( week, _TIMESTAMP ) as _week, \"+\n         \"first_value(_VALUE) over (partition by DATEPART( week, _TIMESTAMP ) order by _TIMESTAMP) as [_Min] \"+\n\t\t \", first_value(_VALUE) over (partition by DATEPART( week, _TIMESTAMP ) order by _TIMESTAMP desc) as [_Max] \"+\n\t\t \" from \"+ db+ \" where _NUMERICID =\" + numericID+\n\t\t \" AND _TIMESTAMP >= '\"+ StartDate + \"' AND _TIMESTAMP <= '\"+ EndDate+ \"'\"+\n\t\t \" AND TRY_CAST(_VALUE AS FLOAT) < 10000000 ) as ID \"+\n\t\t \" order by _week asc\";\n\n\t}\n\telse if(filter == '_date'){\n\t\tq1 = \"SELECT  TRY_CAST([_Max] AS FLOAT)-TRY_CAST([_Min] AS FLOAT) as avg_temp, _date from \"+\n  \t\t \"( select  distinct FORMAT(_TIMESTAMP, 'yyyy-MM-dd') as _date, \"+\n         \"first_value(_VALUE) over (partition by FORMAT(_TIMESTAMP, 'yyyy-MM-dd') order by _TIMESTAMP) as [_Min] \"+\n\t\t \", first_value(_VALUE) over (partition by FORMAT(_TIMESTAMP, 'yyyy-MM-dd') order by _TIMESTAMP desc) as [_Max] \"+\n\t\t \" from  \"+ db+ \" where _NUMERICID =\" + numericID+\n\t\t \" AND _TIMESTAMP >= '\"+ StartDate + \"' AND _TIMESTAMP <= '\"+ EndDate+ \"'\"+\n\t\t \" AND TRY_CAST(_VALUE AS FLOAT) < 10000000 ) as ID where TRY_CAST([_Max] AS FLOAT)-TRY_CAST([_Min] AS FLOAT) < 5000 \"+\n\t\t \" order by _date asc\";\n\t}\n\telse if(filter == '_hour'){\n\t\tq1 = \"SELECT  TRY_CAST([_Max] AS FLOAT)-TRY_CAST([_Min] AS FLOAT) as avg_temp, _hour from \"+\n  \t\t \"( select  distinct DATEPART( hour, _TIMESTAMP ) as _hour, \"+\n         \"first_value(_VALUE) over (partition by DATEPART( hour, _TIMESTAMP ) order by _TIMESTAMP) as [_Min] \"+\n\t\t \", first_value(_VALUE) over (partition by DATEPART( hour, _TIMESTAMP ) order by _TIMESTAMP desc) as [_Max] \"+\n\t\t \" from  \"+ db+ \" where _NUMERICID =\" + numericID+\n\t\t \" AND _TIMESTAMP >= '\"+ StartDate + \"' AND _TIMESTAMP <= '\"+ EndDate+ \"'\"+\n\t\t \" AND TRY_CAST(_VALUE AS FLOAT) < 10000000 ) as ID \"+\n\t\t \" order by _hour asc\";\n\n\t}\n\telse if(filter == '_hourtrend'){\n\t\tq1 = \"SELECT TRY_CAST([_Max] AS FLOAT)-TRY_CAST([_Min] AS FLOAT) as avg_temp, \"+\n                \" _hourtrend from ( select distinct FORMAT(_TIMESTAMP, 'yyyy-MM-dd HH') as _hourtrend, \"+\n                \" first_value(_VALUE) over (partition by FORMAT(_TIMESTAMP, 'yyyy-MM-dd HH') order by _TIMESTAMP) as [_Min] , \"+\n                \" first_value(_VALUE) over (partition by FORMAT(_TIMESTAMP, 'yyyy-MM-dd HH') order by _TIMESTAMP desc) as [_Max] \"+\n                \" from \"+ db+ \" where _NUMERICID = \"+ numericID +\n                \" AND _TIMESTAMP >= '\"+ StartDate + \"' AND _TIMESTAMP <= '\"+ EndDate+ \"'\"+\n                \" AND TRY_CAST(_VALUE AS FLOAT) < 10000000 ) as ID \"+\n                \" where TRY_CAST([_Max] AS FLOAT)-TRY_CAST([_Min] AS FLOAT) < 5000 \"+\n                \" order by _hourtrend asc\";\n\t}\n}\nelse{\n\tif(filter == '_year'){\n\t\t    q1 = q1 + \" _year order by _year\";\n\t\t}\n\telse if(filter == '_month'){\n\t\t    q1 = q1 + \"_year ,\"+ filter+\" order by _year, _month\";\n\t\t}\n\telse if(filter == '_week'){\n\t\t    q1 = q1 + \"_year , \"+ filter + \" order by _year, _week\";\n\t\t}\n\telse if(filter == '_date'){\n\t\t    q1 = q1 + filter + \" order by _date\";\n\t\t}\n\telse if(filter == '_hour'){\n\t\t    q1 = \"SELECT AVG(avg_value) as avg_temp, _hour FROM \"+\n\t\t \"( SELECT AVG(TRY_CAST(_VALUE as FLOAT)) as avg_value , \"+\n\t\t \"DATEPART( year, _TIMESTAMP ) as _year, \"+ \n\t\t \"DATEPART( month, _TIMESTAMP ) as _month, \"+\n\t\t  \"DATEPART( week, _TIMESTAMP ) as _week, \"+ \n\t\t  \"DATEPART( day, _TIMESTAMP ) as _day , \"+\n\t\t   \"DATEPART( hour, _TIMESTAMP ) as _hour \"+\n\t\t  \"FROM [NestTest].[dbo].[KepMET51] \"+\n\t\t  \"where kepMet51._NUMERICID= \" + numericID + condition +\n\t\t   \"AND _TIMESTAMP >=  '\"+ StartDate + \"' AND _TIMESTAMP <= '\"+ EndDate+\n\t\t   \"' GROUP BY DATEPART( year, _TIMESTAMP ), DATEPART( month, _TIMESTAMP ) , \"+\n\t\t   \"DATEPART( week, _TIMESTAMP ), \"+\n\t\t   \"DATEPART( day, _TIMESTAMP ), \"+\n\t\t   \"DATEPART( hour, _TIMESTAMP )) as ID \"+\n\t\t \"group by _hour order by _hour\";\n\t\t}\n\telse if(filter == '_hourtrend'){\n\t\t    q1 = \"SELECT AVG(TRY_CAST(_VALUE as FLOAT)) as avg_temp , \"+\n\t\t  \"FORMAT(_TIMESTAMP, 'yyyy-MM-dd HH') as _hourtrend \"+\n\t\t  \"FROM [NestTest].[dbo].[KepMET51] \"+\n\t\t  \"where kepMet51._NUMERICID= \" + numericID + condition +\n\t\t   \"AND _TIMESTAMP >=  '\"+ StartDate + \"' AND _TIMESTAMP <= '\"+ EndDate+\n\t\t   \"'GROUP BY \"+ \n\t\t   \"FORMAT(_TIMESTAMP, 'yyyy-MM-dd HH') order by FORMAT(_TIMESTAMP, 'yyyy-MM-dd HH') \";\n\t\t}\n}\n\nmsg.payload = q1;\nreturn msg;","outputs":1,"noerr":0,"x":582.2880268096924,"y":1155.2730388641357,"wires":[["a6c27572.a47b38","2dd9ca1f.73e546"]]},{"id":"2dd9ca1f.73e546","type":"debug","z":"134033fa.c8fdfc","name":"queryyyyy","active":true,"console":"false","complete":"payload","x":750.3334407806396,"y":1144.0303192138672,"wires":[]},{"id":"c5b69583.c10428","type":"ui_date_picker","z":"134033fa.c8fdfc","name":"StartDate","label":"StartDate","group":"b45303cc.ce698","order":2,"width":"6","height":"1","passthru":true,"topic":"Date","x":621,"y":106,"wires":[["dfa7c393.15a28"]]},{"id":"d356853e.18e268","type":"ui_date_picker","z":"134033fa.c8fdfc","name":"EndDate","label":"EndDate","group":"b45303cc.ce698","order":3,"width":"6","height":"1","passthru":true,"topic":"Date","x":620,"y":165,"wires":[["582024ff.b0620c"]]},{"id":"dfa7c393.15a28","type":"function","z":"134033fa.c8fdfc","name":"StartDate","func":"var date = new Date(msg.payload);\nmsg.payload = date.toISOString().slice(0,10).replace(/-/g,\"-\");\nglobal.set(\"StartDate\",msg.payload);\nreturn msg;\n","outputs":1,"noerr":0,"x":767,"y":110,"wires":[[]]},{"id":"582024ff.b0620c","type":"function","z":"134033fa.c8fdfc","name":"EndDate","func":"\nvar date = new Date(msg.payload);\nmsg.payload = date.toISOString().slice(0,10).replace(/-/g,\"-\");\nglobal.set(\"EndDate\",msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":765,"y":172,"wires":[["d7554692.0be818"]]},{"id":"d7554692.0be818","type":"debug","z":"134033fa.c8fdfc","name":"Date","active":false,"console":"false","complete":"payload","x":909,"y":173,"wires":[]},{"id":"f486dc2.9481d2","type":"debug","z":"134033fa.c8fdfc","name":"filter","active":true,"console":"false","complete":"payload","x":844,"y":489,"wires":[]},{"id":"fcb6ed2d.3708d","type":"ui_button","z":"134033fa.c8fdfc","name":"HOUR TREND","group":"b45303cc.ce698","order":0,"width":"3","height":"1","passthru":false,"label":"Hour Trend","color":"","bgcolor":"","icon":"","payload":"_hourtrend","payloadType":"str","topic":"","x":828,"y":360,"wires":[["cbd98295.9d348"]]},{"id":"c1b63df6.94fe3","type":"function","z":"134033fa.c8fdfc","name":"live_data_query","func":"var numericID = global.get(\"numericID\");\nif(numericID == 401191000 || numericID == 42100068 ){\n    if(numericID == 401191000){\n        var db = '[dbo].[KepElEnergy]';\n    }\n    else if(numericID == 42100068 ){\n        db = '[dbo].[KepEnergyUnits]';\n    }\n    var q1 = \"SELECT  TRY_CAST([_Max] AS FLOAT)-TRY_CAST([_Min] AS FLOAT) as avg_temp, _hour from \"+\n  \t\t \" ( select  distinct DATEPART( hour, _TIMESTAMP ) as _hour, \"+\n         \" first_value(_VALUE) over (partition by DATEPART( hour, _TIMESTAMP ) order by _TIMESTAMP) as [_Min] \"+\n\t\t \", first_value(_VALUE) over (partition by DATEPART( hour, _TIMESTAMP ) order by _TIMESTAMP desc) as [_Max] \"+\n\t\t \" from  \" + db + \" where _NUMERICID =\" + numericID+\n\t\t \" AND _TIMESTAMP >= CONVERT (date, GETDATE()) AND TRY_CAST(_VALUE AS FLOAT) < 10000000  ) as ID \"+\n\t\t \" order by _hour asc\";\n}\nelse{\n  var q1 = \"SELECT AVG(TRY_CAST(_VALUE as FLOAT)) as avg_temp  , DATEPART( hour, _TIMESTAMP ) as _hour  from  [NestTest].[dbo].[KepMET51] \"+\n          \"where _TIMESTAMP >= CONVERT (date, GETDATE())  AND \"+\n           \"kepMet51._NUMERICID= \"+ numericID +\n          \" AND TRY_CAST(_VALUE AS FLOAT) < 100 \"+\n          \"group by  DATEPART( hour, _TIMESTAMP ) order by _hour asc\";  \n}\n \nmsg.payload = q1;\nreturn msg;","outputs":1,"noerr":0,"x":586.6364707946777,"y":901.3636379241943,"wires":[["baf0f729.851758","22d9106d.8a23e"]]},{"id":"8ac487a7.c22688","type":"debug","z":"134033fa.c8fdfc","name":"Live data","active":true,"console":"false","complete":"payload","x":946.9091529846191,"y":914.7273082733154,"wires":[]},{"id":"2e0e58fd.cac708","type":"function","z":"134033fa.c8fdfc","name":"Data Converter","func":"var numericID2 = global.get(\"numericID\");\nvar desc = global.get(\"desc\");\nvar today = (new Date()).toISOString().slice(0,10).replace(/-/g,\"-\");\nvar year = \"Hourly Live Data for \"+ desc +\" for today\";\nvar data = msg.payload;\nvar unit = global.get(\"unit\");\nmsg.paylaod = [];\nvar value = []\nvar date = []\nfor(var i = 0; i < data.length;i++){\n    value.push(data[i].avg_temp);\n    date.push(data[i]._hour);\n}\n    \n\n        \nmsg.payload = [value,date,numericID2,year,desc, today, unit];\n\nreturn msg;","outputs":1,"noerr":0,"x":969.6364135742188,"y":978.4545593261719,"wires":[["14f58d02.f1ec53","6dc75dd.4b62da4"]]},{"id":"14f58d02.f1ec53","type":"debug","z":"134033fa.c8fdfc","name":"live highcharts","active":true,"console":"false","complete":"payload","x":1210.7273483276367,"y":1055.3636417388916,"wires":[]},{"id":"baf0f729.851758","type":"MSSQL","z":"134033fa.c8fdfc","mssqlCN":"9534cec8.3799d","name":"NEST","query":"","outField":"payload","x":780.1818923950195,"y":912.6364116668701,"wires":[["8ac487a7.c22688","2e0e58fd.cac708"]]},{"id":"6dc75dd.4b62da4","type":"ui_template","z":"134033fa.c8fdfc","group":"16b4424d.dddb6e","name":"live charts","order":3,"width":"12","height":"5","format":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n</head>\n<body>\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\n<div id=\"container2\" style=\"min-width: 550px; height: 240px; margin: 0 auto\"></div>\n<script>\n(function(scope) {\n        scope.$watch('msg.payload', function(dataseries) {\n            \n    Highcharts.chart('container2', {\n    chart: {\n        backgroundColor: {\n         linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n         stops: [\n            [0, '#121212'],\n            [1, '#121212']\n         ]\n      },\n        type: 'line'\n    },\n    title: {\n        style: {\n         color: '#E0E0E3',\n      },\n        text: dataseries[3]\n    },\n    colors: ['#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066', '#eeaaee',\n      '#55BF3B', '#DF5353', '#7798BF', '#aaeeee', '#2b908f'],\n    subtitle: {\n        style: {\n         color: '#E0E0E3',\n      },\n        text:  \"Today = \" + \"'\" + dataseries[5] + \"'\" + \" Empa NEST\"\n    },\n    xAxis: {\n        gridLineColor: '#707073',\n      labels: {\n         style: {\n            color: '#E0E0E3',\n            fontSize: '10px'\n         }\n      },\n      lineColor: '#707073',\n      minorGridLineColor: '#505053',\n      tickColor: '#707073',\n      title: {\n         style: {\n            color: '#A0A0A3',\n            fontSize: '10px'\n         }\n      },\n        categories:dataseries[1],\n        crosshair: true\n    },\n    yAxis: {\n        title: {\n            text: 'Average Value',\n            style: {\n            color: '#A0A0A3',\n            fontSize: '12px'\n         }\n        }\n    },\n    tooltip: {\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n            '<td style=\"padding:0\"><b>{point.y:.1f} '+dataseries[6]+'</b></td></tr>',\n        footerFormat: '</table>',\n        shared: true,\n        useHTML: true,\n        backgroundColor: 'rgba(0, 0, 0, 0.85)',\n      style: {\n         color: '#F0F0F0'\n      }\n    },\n    plotOptions: {\n        column: {\n            pointPadding: 0.2,\n            borderWidth: 0\n        }\n    },\n     legend: {\n      itemStyle: {\n         color: '#E0E0E3'\n      },\n      itemHoverStyle: {\n         color: '#FFF'\n      },\n      itemHiddenStyle: {\n         color: '#606063'\n      }\n   },\n    series: [ {\n        name: dataseries[4],\n        data: dataseries[0]\n    }]\n});\n        });\n    })(scope);\n</script>\n\n</body>\n</html>","storeOutMessages":true,"fwdInMessages":true,"x":1194.7273483276367,"y":984.3636417388916,"wires":[[]]},{"id":"1252a86.edd6558","type":"debug","z":"134033fa.c8fdfc","name":"","active":true,"console":"false","complete":"false","x":1263.9091033935547,"y":1252.9243698120117,"wires":[]},{"id":"22d9106d.8a23e","type":"debug","z":"134033fa.c8fdfc","name":"qyery live","active":true,"console":"false","complete":"payload","x":956.2728061676025,"y":870.8182201385498,"wires":[]},{"id":"8b12c082.bcd03","type":"MSSQL","z":"134033fa.c8fdfc","mssqlCN":"9534cec8.3799d","name":"NEST","query":"","outField":"payload","x":757,"y":626,"wires":[["f4dba79a.7eb7e8","d7d04d7c.5e9b"]]},{"id":"7938a55.ce10a5c","type":"function","z":"134033fa.c8fdfc","name":"getting unit","func":"var numericID = global.get(\"numericID\") ;\n//var query = \"SELECT Datapoint_Unit from [NestTest].[Dim].[DimDimension] where _NUMERICID=\"+ numericID ;\nvar query;\nquery = \"SELECT Datapoint_Unit from [NestTest].[Dim].[DimDimension] where _NUMERICID=\"+ numericID ;\nmsg.payload = query;\nreturn msg;\n","outputs":1,"noerr":0,"x":389,"y":629,"wires":[["8b12c082.bcd03"]]},{"id":"f4dba79a.7eb7e8","type":"debug","z":"134033fa.c8fdfc","name":"label","active":true,"console":"false","complete":"payload","x":941,"y":667,"wires":[]},{"id":"d7d04d7c.5e9b","type":"function","z":"134033fa.c8fdfc","name":"setting unit","func":"global.set(\"unit\",msg.payload[0].Datapoint_Unit);\n","outputs":1,"noerr":0,"x":955,"y":599,"wires":[[]]},{"id":"b420d81e.1b5fc8","type":"template","z":"134033fa.c8fdfc","name":"CSS","field":"payload.style","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"/**\n * (c) 2010-2017 Torstein Honsi\n *\n * License: www.highcharts.com/license\n * \n * Dark theme for Highcharts JS\n * @author Torstein Honsi\n */\n\n'use strict';\n/* global document */\n// Load the fonts\nimport Highcharts from '../parts/Globals.js';\nHighcharts.createElement('link', {\n   href: 'https://fonts.googleapis.com/css?family=Unica+One',\n   rel: 'stylesheet',\n   type: 'text/css'\n}, null, document.getElementsByTagName('head')[0]);\n\nHighcharts.theme = {\n   colors: ['#2b908f', '#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066', '#eeaaee',\n      '#55BF3B', '#DF5353', '#7798BF', '#aaeeee'],\n   chart: {\n      backgroundColor: {\n         linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n         stops: [\n            [0, '#2a2a2b'],\n            [1, '#3e3e40']\n         ]\n      },\n      style: {\n         fontFamily: '\\'Unica One\\', sans-serif'\n      },\n      plotBorderColor: '#606063'\n   },\n   title: {\n      style: {\n         color: '#E0E0E3',\n         textTransform: 'uppercase',\n         fontSize: '20px'\n      }\n   },\n   subtitle: {\n      style: {\n         color: '#E0E0E3',\n         textTransform: 'uppercase'\n      }\n   },\n   xAxis: {\n      gridLineColor: '#707073',\n      labels: {\n         style: {\n            color: '#E0E0E3'\n         }\n      },\n      lineColor: '#707073',\n      minorGridLineColor: '#505053',\n      tickColor: '#707073',\n      title: {\n         style: {\n            color: '#A0A0A3'\n\n         }\n      }\n   },\n   yAxis: {\n      gridLineColor: '#707073',\n      labels: {\n         style: {\n            color: '#E0E0E3'\n         }\n      },\n      lineColor: '#707073',\n      minorGridLineColor: '#505053',\n      tickColor: '#707073',\n      tickWidth: 1,\n      title: {\n         style: {\n            color: '#A0A0A3'\n         }\n      }\n   },\n   tooltip: {\n      backgroundColor: 'rgba(0, 0, 0, 0.85)',\n      style: {\n         color: '#F0F0F0'\n      }\n   },\n   plotOptions: {\n      series: {\n         dataLabels: {\n            color: '#B0B0B3'\n         },\n         marker: {\n            lineColor: '#333'\n         }\n      },\n      boxplot: {\n         fillColor: '#505053'\n      },\n      candlestick: {\n         lineColor: 'white'\n      },\n      errorbar: {\n         color: 'white'\n      }\n   },\n   legend: {\n      itemStyle: {\n         color: '#E0E0E3'\n      },\n      itemHoverStyle: {\n         color: '#FFF'\n      },\n      itemHiddenStyle: {\n         color: '#606063'\n      }\n   },\n   credits: {\n      style: {\n         color: '#666'\n      }\n   },\n   labels: {\n      style: {\n         color: '#707073'\n      }\n   },\n\n   drilldown: {\n      activeAxisLabelStyle: {\n         color: '#F0F0F3'\n      },\n      activeDataLabelStyle: {\n         color: '#F0F0F3'\n      }\n   },\n\n   navigation: {\n      buttonOptions: {\n         symbolStroke: '#DDDDDD',\n         theme: {\n            fill: '#505053'\n         }\n      }\n   },\n\n   // scroll charts\n   rangeSelector: {\n      buttonTheme: {\n         fill: '#505053',\n         stroke: '#000000',\n         style: {\n            color: '#CCC'\n         },\n         states: {\n            hover: {\n               fill: '#707073',\n               stroke: '#000000',\n               style: {\n                  color: 'white'\n               }\n            },\n            select: {\n               fill: '#000003',\n               stroke: '#000000',\n               style: {\n                  color: 'white'\n               }\n            }\n         }\n      },\n      inputBoxBorderColor: '#505053',\n      inputStyle: {\n         backgroundColor: '#333',\n         color: 'silver'\n      },\n      labelStyle: {\n         color: 'silver'\n      }\n   },\n\n   navigator: {\n      handles: {\n         backgroundColor: '#666',\n         borderColor: '#AAA'\n      },\n      outlineColor: '#CCC',\n      maskFill: 'rgba(255,255,255,0.1)',\n      series: {\n         color: '#7798BF',\n         lineColor: '#A6C7ED'\n      },\n      xAxis: {\n         gridLineColor: '#505053'\n      }\n   },\n\n   scrollbar: {\n      barBackgroundColor: '#808083',\n      barBorderColor: '#808083',\n      buttonArrowColor: '#CCC',\n      buttonBackgroundColor: '#606063',\n      buttonBorderColor: '#606063',\n      rifleColor: '#FFF',\n      trackBackgroundColor: '#404043',\n      trackBorderColor: '#404043'\n   },\n\n   // special colors for some of the\n   legendBackgroundColor: 'rgba(0, 0, 0, 0.5)',\n   background2: '#505053',\n   dataLabelsColor: '#B0B0B3',\n   textColor: '#C0C0C0',\n   contrastTextColor: '#F0F0F3',\n   maskColor: 'rgba(255,255,255,0.3)'\n};\n\n// Apply the theme\nHighcharts.setOptions(Highcharts.theme);","x":1211.7273406982422,"y":920.3636407852173,"wires":[["6dc75dd.4b62da4","8394aa48.69cb88"]]},{"id":"8394aa48.69cb88","type":"debug","z":"134033fa.c8fdfc","name":"CSS","active":true,"console":"false","complete":"payload","x":1323.8184032440186,"y":870.469729423523,"wires":[]},{"id":"4397338d.2f7bbc","type":"delay","z":"134033fa.c8fdfc","name":"","pauseType":"delay","timeout":"100","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":406.0000648498535,"y":902.9999990463257,"wires":[["c1b63df6.94fe3"]]},{"id":"561f7f7e.05b1c","type":"function","z":"134033fa.c8fdfc","name":"description query","func":"var numericID = global.get(\"numericID\") ;\nvar query = \"SELECT Datapoint_SignalDescription from \" +\n            \" [NestTest].[DimEN].[DimEnDimension] where _NUMERICID = \" + numericID;\nmsg.payload = query;\nreturn msg;","outputs":1,"noerr":0,"x":592.9999923706055,"y":734.0000019073486,"wires":[["eac55bb7.026618"]]},{"id":"790e43e9.64d75c","type":"delay","z":"134033fa.c8fdfc","name":"","pauseType":"delay","timeout":"50","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":400.00001525878906,"y":738,"wires":[["561f7f7e.05b1c"]]},{"id":"eac55bb7.026618","type":"MSSQL","z":"134033fa.c8fdfc","mssqlCN":"9534cec8.3799d","name":"NEST","query":"","outField":"payload","x":765.0000038146973,"y":739.0000019073486,"wires":[["d35d1331.d2b54","29f75dd9.a4c2a2"]]},{"id":"d35d1331.d2b54","type":"function","z":"134033fa.c8fdfc","name":"setting description","func":"var desc;\nvar numericID =  global.get(\"numericID\");\nif(numericID == '000' ){\n     desc = 'None';\n} else{\n    desc =  msg.payload[0].Datapoint_SignalDescription; \n}\nglobal.set(\"desc\",desc);\n","outputs":1,"noerr":0,"x":976.0000152587891,"y":727.0000019073486,"wires":[[]]},{"id":"29f75dd9.a4c2a2","type":"debug","z":"134033fa.c8fdfc","name":"description","active":true,"console":"false","complete":"payload","x":954.0000114440918,"y":791.0000076293945,"wires":[]},{"id":"2bc0f91a.21fee6","type":"function","z":"134033fa.c8fdfc","name":"NumericID Filter","func":"global.set(\"numericID\",msg.payload);\n","outputs":1,"noerr":0,"x":365,"y":113,"wires":[[]]},{"id":"f016204b.ec618","type":"ui_dropdown","z":"134033fa.c8fdfc","name":"","label":"NUMERIC_ID","place":"","group":"78c97882.c8d7d8","order":4,"width":"7","height":"1","passthru":true,"options":[{"label":"Ambient temperature 3200000","value":"3200000","type":"str"},{"label":"Relative Humidity 3200002","value":"3200002","type":"str"},{"label":"ElEnergy 401191000","value":"401191000","type":"str"},{"label":"EnergyUnits 42100068","value":"42100068","type":"str"},{"label":"Absolute air pressure 3200003","value":"3200003","type":"str"},{"label":"Wind speed 3200004","value":"3200004","type":"str"},{"label":"Global solar radiation 3200008","value":"3200008","type":"str"},{"label":"None","value":"000","type":"str"}],"payload":"","topic":"","x":175,"y":114,"wires":[["2bc0f91a.21fee6","2511960a.29581a"]]},{"id":"2511960a.29581a","type":"debug","z":"134033fa.c8fdfc","name":"numeric id","active":true,"console":"false","complete":"payload","x":360,"y":165,"wires":[]},{"id":"8a1a2002.d1f9d","type":"comment","z":"134033fa.c8fdfc","name":"Individual Dashboard","info":"This FLow contains all the elements for the user to select individual signal.\nAt max 4 signals can be selected together.","x":612,"y":40,"wires":[]},{"id":"9a0475bf.18fbb8","type":"OpcUa-Client","z":"134033fa.c8fdfc","endpoint":"c37e085a.8bf968","action":"subscribe","time":"4","timeUnit":"s","name":"","x":509,"y":1463.0000305175781,"wires":[["c129f07.4568d1","ec9e8730.c110e8"]]},{"id":"c129f07.4568d1","type":"debug","z":"134033fa.c8fdfc","name":"","active":false,"console":"false","complete":"payload","x":782.010009765625,"y":1518.0000305175781,"wires":[]},{"id":"ec9e8730.c110e8","type":"ui_text","z":"134033fa.c8fdfc","group":"d3ccea4.b611a18","order":1,"width":"8","height":"4","name":"Outside Meteo","label":"","format":"<font size=\"15\" color=\"white\">{{  msg.payload | uppercase }} &degC</font>","layout":"col-center","x":799.010009765625,"y":1425.0000305175781,"wires":[]},{"id":"eaa107e3.0f50d8","type":"inject","z":"134033fa.c8fdfc","name":"Meteo.Aussentemperatur","topic":"ns=38;s=MET51.strWrite.lrLufttemperatur","payload":"","payloadType":"num","repeat":"5","crontab":"","once":false,"x":231.010009765625,"y":1451.5,"wires":[["9a0475bf.18fbb8"]]},{"id":"2b901eaf.584ed2","type":"comment","z":"134033fa.c8fdfc","name":"3. Live Data for Ambient Temperature","info":"This data is taken from OPC UA.","x":231,"y":1396,"wires":[]},{"id":"6214d147.72cb5","type":"delay","z":"134033fa.c8fdfc","name":"","pauseType":"delay","timeout":"200","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":410.6060333251953,"y":1160.606092453003,"wires":[["261c07ac.5f83b8"]]},{"id":"41778529.8eef9c","type":"comment","z":"134033fa.c8fdfc","name":"selecting resolution filter","info":"","x":205.9090909090909,"y":312.72728876634073,"wires":[]},{"id":"ff2eb103.3be45","type":"comment","z":"134033fa.c8fdfc","name":"getting the unit of the signal","info":"","x":431.3636641068892,"y":593.6363844438032,"wires":[]},{"id":"4e9e8969.295a18","type":"comment","z":"134033fa.c8fdfc","name":"getting the description of the signal","info":"","x":450.45457319779825,"y":700.9091117165304,"wires":[]},{"id":"5e1c5c7c.c445c4","type":"comment","z":"134033fa.c8fdfc","name":"1. Getting the data from SQL DB for current day for 24 hr","info":"","x":536.8182095614346,"y":860.3030464865944,"wires":[]},{"id":"91bfe033.80152","type":"comment","z":"134033fa.c8fdfc","name":"2. Getting the data from SQL for the resolution selected ","info":"Most important graph in the flow","x":540.4545731977983,"y":1107.5757737593217,"wires":[]},{"id":"5d1484fc.eceffc","type":"function","z":"134033fa.c8fdfc","name":"OPC UA","func":"var numericID = global.get(\"numericID\");\nif(numericID == 3200000){\n    msg.topic = \"ns=20;s=MET51.strMET51Read.strWetterstation.strStation1.lrLufttemperatur\";\n}\nelse if(numericID == 3200002){\n    msg.topic = \"ns=20;s=MET51.strMET51Read.strWetterstation.strStation1.lrRelativeFeuchte\";\n}else if (numericID == 3200003){\n    msg.topic = \"ns=20;s=MET51.strMET51Read.strWetterstation.strStation1.lrAbsoluterLuftdruck\";\n}else if (numericID == 3200004){\n    msg.topic = \"ns=20;s=MET51.strMET51Read.strWetterstation.strStation1.lrWindgeschwindigkeit\";\n}else if(numericID == 3200008){\n    msg.topic = \"ns=20;s=MET51.strMET51Read.strWetterstation.strStation1.lrGlobalstrahlung\";\n}else{\n    msg.topic = null;\n}\n\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":310,"y":1598,"wires":[[]]},{"id":"ea9bc5b5.691b18","type":"inject","z":"134033fa.c8fdfc","name":"Meteo","topic":"","payload":"","payloadType":"str","repeat":"5","crontab":"","once":false,"x":132,"y":1561,"wires":[["5d1484fc.eceffc"]]},{"id":"b45303cc.ce698","type":"ui_group","z":"","name":"Resolution","tab":"5f582c01.948c94","order":5,"disp":false,"width":"30"},{"id":"78c97882.c8d7d8","type":"ui_group","z":"","name":"Filter","tab":"5f582c01.948c94","order":1,"disp":true,"width":"10"},{"id":"53849b89.4fa1b4","type":"ui_group","z":"","name":"Default","tab":"5f582c01.948c94","order":4,"disp":false,"width":"30"},{"id":"9534cec8.3799d","type":"MSSQL-CN","z":"","name":"NEST","server":"NEST-SQL-HIST","encyption":false,"database":"NestTest"},{"id":"16b4424d.dddb6e","type":"ui_group","z":"","name":"Live Data","tab":"5f582c01.948c94","order":3,"disp":false,"width":"12"},{"id":"c37e085a.8bf968","type":"OpcUa-Endpoint","z":"","endpoint":"opc.tcp://192.168.223.20:4851","login":false},{"id":"d3ccea4.b611a18","type":"ui_group","z":"","name":"OPC UA","tab":"5f582c01.948c94","order":2,"disp":true,"width":"8"},{"id":"5f582c01.948c94","type":"ui_tab","z":"","name":"Individual Signals","icon":"dashboard","order":11}]