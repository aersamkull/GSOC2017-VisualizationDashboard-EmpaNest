[{"id":"e615c99e.5a2cc8","type":"debug","z":"cec03951.a6d398","name":"highcharts","active":false,"console":"false","complete":"payload","x":1243.6667823791504,"y":642.1112079620361,"wires":[]},{"id":"6e546d3a.89f5b4","type":"MSSQL","z":"cec03951.a6d398","mssqlCN":"9534cec8.3799d","name":"NEST","query":"","outField":"payload","x":843.3333549499512,"y":583.3335590362549,"wires":[["18467fc1.519be","ac0899c2.f4d2f8"]]},{"id":"ac0899c2.f4d2f8","type":"function","z":"cec03951.a6d398","name":"Data Converter","func":"var numericID = [3200000, 3200002, 3200003, 3200004, 3200008];\nvar desc = ['ambient temperature', 'relative humidity', 'absolute air pressure', 'wind speed' , 'global solar radiation'];\n\nvar filter = global.get(\"filter\");\nvar year = filter +\" wise value for Weather Station\";\nvar StartDate = global.get(\"StartDate2\");\nvar EndDate = global.get(\"EndDate2\");\nvar subtitle = \"StartDate = \"+ \"'\"+StartDate + \"'\"+\"  and  EndDate = \"+ \"'\"+EndDate +\"'\"+ \"  Empa NEST\";\nvar data = msg.payload;\nvar value0 = [];\nvar value1 =[];\nvar value2 = [];\nvar value3 = [];\nvar value4 = [];\nvar date = [];\nvar monthmap = [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'];\n\nfor(var i = 0; i < data.length;i++){\n    value0.push(data[i].avg_3200000);\n    value1.push(data[i].avg_3200002);\n    value2.push(data[i].avg_3200003);\n    value3.push(data[i].avg_3200004);\n    value4.push(data[i].avg_3200008);\n        \n    if(filter == '_month'){\n        date.push(monthmap[data[i]._date-1]);\n    }\n    else if(filter == '_year'){\n        date.push(data[i]._date);\n    }\n    else if(filter == '_week'){\n        date.push(data[i]._date);\n    }\n    else if(filter == '_date'){\n        date.push(data[i]._date);\n    }\n    else if(filter == '_hour'){\n        date.push(data[i]._date);\n    }\n    else if(filter == '_hourtrend'){\n        date.push(data[i]._date);\n    }\n}\nmsg.payload = [value0,date,numericID,year, value1,value2,value3,value4, subtitle, desc];            \nreturn msg;","outputs":1,"noerr":0,"x":1049.2222900390625,"y":613.333417892456,"wires":[["e615c99e.5a2cc8","10a015c0.e952fa"]]},{"id":"18467fc1.519be","type":"debug","z":"cec03951.a6d398","name":"queryyyyy","active":true,"console":"false","complete":"payload","x":1032.4444999694824,"y":542.2222537994385,"wires":[]},{"id":"eee6d900.5224c8","type":"debug","z":"cec03951.a6d398","name":"linecolumnchart","active":false,"console":"false","complete":"payload","x":1420.0001373291016,"y":584.7778606414795,"wires":[]},{"id":"9e8d076e.83eba8","type":"ui_button","z":"cec03951.a6d398","name":"Refresh","group":"b98919d9.73de08","order":3,"width":"1","height":"1","passthru":false,"label":"","color":"","bgcolor":"","icon":"cached","payload":"1","payloadType":"global","topic":"press","x":226.11119079589844,"y":605.777834892273,"wires":[["c9d91904.724998","e522719d.ca358","b81f377.c43b4c8","8c296c7.7dfd29","80b230f2.02421","b112e2fa.a24a6"]]},{"id":"10a015c0.e952fa","type":"ui_template","z":"cec03951.a6d398","group":"17f52cb8.1a3383","name":"linecolumn","order":4,"width":0,"height":0,"format":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n</head>\n<body>\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\n<div id=\"container\" style=\"min-width: 1400px; height: 600px; margin: 0 auto\"></div>\n<script>\n(function(scope) {\n        scope.$watch('msg.payload', function(dataseries) {\n          \n    Highcharts.chart('container', {\n    chart: {\n        backgroundColor:{\n         linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n         stops: [\n            [0, '#121212'],\n            [1, '#121212']\n         ],\n      },\n       style: {\n         fontFamily: '\\'Unica One\\', sans-serif'\n      },\n      plotBorderColor: '#606063'\n    },\n    colors: ['#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066', '#eeaaee',\n      '#55BF3B', '#DF5353', '#7798BF', '#aaeeee', '#2b908f'],\n    title: {\n        style: {\n         color: '#E0E0E3',\n      },\n        text: dataseries[3]\n    },\n    subtitle: {\n        style: {\n         color: '#E0E0E3',\n      },\n        text: dataseries[8]\n    },\n    xAxis: [{\n        categories:dataseries[1],\n        crosshair: true,\n        labels: {\n         style: {\n            color: '#E0E0E3',\n            fontSize: '10px'\n         }\n      }\n    }],\n    yAxis: [{ // Primary yAxis\n        labels: {\n            format: '{value}',\n            style: {\n                color: '#E0E0E3'\n            }\n        },\n        title: {\n            text: 'Y1 Axis',\n            style: {\n                color:  '#E0E0E3'\n            }\n        },\n        lineColor: '#707073',\n        gridLineColor: '#707073',\n      tickColor: '#707073',\n      tickWidth: 0.5\n    }, { // Secondary yAxis\n        title: {\n            text: 'Y2 Axis',\n            style: {\n                color: Highcharts.getOptions().colors[0]\n            }\n        },\n        labels: {\n            format: '{value}',\n            style: {\n                color: Highcharts.getOptions().colors[0]\n            }\n        },\n        opposite: true,\n        gridLineColor: '#707073',\n        lineColor: '#707073',\n      tickColor: '#707073',\n      tickWidth: 0.5\n    }],\n    tooltip: {\n        shared: true\n    },\n    legend: {\n      itemStyle: {\n         color: '#E0E0E3'\n      },\n      itemHoverStyle: {\n         color: '#FFF'\n      },\n      itemHiddenStyle: {\n         color: '#606063'\n      }\n   },\n    series: [\n    {\n        name: dataseries[9][0],\n        yAxis: 1,\n        data: dataseries[0],\n        tooltip: {\n            valueSuffix: ' °C'\n        }\n\n    }, {\n        name: dataseries[9][3],\n        yAxis: 1,\n        data: dataseries[6],\n        tooltip: {\n            valueSuffix: ' m/s'\n        }\n    },\n    {\n        name: dataseries[9][1],\n        yAxis: 1,\n        data: dataseries[4],\n        tooltip: {\n            valueSuffix: ' °r.F.'\n        }\n    },\n    {\n        name: dataseries[9][2],\n        yAxis: 0,\n        data: dataseries[5],\n        tooltip: {\n            valueSuffix:' hPa'\n        }\n    },\n    {\n        name: dataseries[9][4],\n        yAxis: 0,\n        data: dataseries[7],\n        tooltip: {\n            valueSuffix: ' W/m^2'\n        }\n    }]\n});\n        });\n    })(scope);\n</script>","storeOutMessages":true,"fwdInMessages":true,"x":1242.4443969726562,"y":584.1112213134766,"wires":[["eee6d900.5224c8"]]},{"id":"c9d91904.724998","type":"function","z":"cec03951.a6d398","name":"function","func":"var numericID = global.get(\"numericID\");\nvar StartDate = global.get(\"StartDate2\");\nvar EndDate = global.get(\"EndDate2\");\nvar filter = global.get(\"filter\");\nvar filter_select = \"FORMAT(_TIMESTAMP, 'yyyy-MM-dd')\";\nif (filter == \"_year\"){\n    filter_select = \"DATEPART( year, _TIMESTAMP )\";\n}\nelse if(filter == \"_month\"){\n    filter_select = \"DATEPART( month, _TIMESTAMP )\";\n}\nelse if(filter == \"_date\"){\n    filter_select = \"FORMAT(_TIMESTAMP, 'yyyy-MM-dd')\";\n}\nelse if(filter == \"_week\"){\n    filter_select = \"DATEPART( week, _TIMESTAMP )\";\n}\nelse if(filter == \"_hour\"){\n    filter_select = \"DATEPART( hour, _TIMESTAMP )\";\n}\nelse if(filter == \"_hourtrend\"){\n    filter_select = \"FORMAT(_TIMESTAMP, 'yyyy-MM-dd HH')\";\n}\npld=            \"SELECT \" + filter_select + \" as _date, \" ;\npld= pld +      \"ROUND(AVG(CASE when _NUMERICID = 3200000 AND TRY_CAST(_VALUE AS FLOAT) < 100 THEN TRY_CAST(_VALUE AS FLOAT) END),2) as avg_3200000, \";\npld= pld +      \"ROUND(AVG(CASE when _NUMERICID = 3200002  THEN TRY_CAST(_VALUE AS FLOAT) END),2) as avg_3200002, \";\npld= pld +      \"ROUND(AVG(CASE when _NUMERICID = 3200003  THEN TRY_CAST(_VALUE AS FLOAT) END),2) as avg_3200003, \";\npld= pld +      \"ROUND(AVG(CASE when _NUMERICID = 3200004  THEN TRY_CAST(_VALUE AS FLOAT) END),2) as avg_3200004, \";\npld= pld +      \"ROUND(AVG(CASE when _NUMERICID = 3200008  THEN TRY_CAST(_VALUE AS FLOAT) END),2) as avg_3200008 \";\npld= pld +      \"FROM [NestTest].[dbo].[KepMET51] \";\npld= pld +      \"where _Timestamp >= '\"+ StartDate + \"' AND _Timestamp <= '\"+ EndDate + \"' \" ;\npld= pld +      \"GROUP BY \" + filter_select ;\npld= pld +      \" order by _date \";\nmsg.payload = pld;\nreturn msg;\n\n","outputs":1,"noerr":0,"x":655.0556564331055,"y":624.6667289733887,"wires":[["6e546d3a.89f5b4","2e187edc.1cd4b2"]]},{"id":"da790192.933d9","type":"ui_date_picker","z":"cec03951.a6d398","name":"StartDate","label":"StartDate","group":"b98919d9.73de08","order":1,"width":"5","height":"1","passthru":true,"topic":"Date","x":636.4444618225098,"y":123.55557012557983,"wires":[["9cfa213b.7582e"]]},{"id":"dafe054e.dfe7f8","type":"ui_date_picker","z":"cec03951.a6d398","name":"EndDate","label":"EndDate","group":"b98919d9.73de08","order":2,"width":"5","height":"1","passthru":true,"topic":"Date","x":640.1111450195312,"y":164.55556678771973,"wires":[["6d86052c.4ac93c"]]},{"id":"9cfa213b.7582e","type":"function","z":"cec03951.a6d398","name":"StartDate","func":"var date = new Date(msg.payload);\nmsg.payload = date.toISOString().slice(0,10).replace(/-/g,\"-\");\nglobal.set(\"StartDate2\",msg.payload);\nreturn msg;\n","outputs":1,"noerr":0,"x":802.5555877685547,"y":119.66668224334717,"wires":[["8e7b0853.2d86d8"]]},{"id":"6d86052c.4ac93c","type":"function","z":"cec03951.a6d398","name":"EndDate","func":"\nvar date = new Date(msg.payload);\nmsg.payload = date.toISOString().slice(0,10).replace(/-/g,\"-\");\nglobal.set(\"EndDate2\",msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":803.4444618225098,"y":169.55557012557983,"wires":[[]]},{"id":"bae51bf1.8504d8","type":"inject","z":"cec03951.a6d398","name":"","topic":"Select","payload":"SELECT TOP (10000) [_VALUE],[_TIMESTAMP] FROM [NestTest].[dbo].[KepMET51]","payloadType":"str","repeat":"","crontab":"","once":false,"x":729.1112594604492,"y":538.2223167419434,"wires":[["6e546d3a.89f5b4"]]},{"id":"4749cf67.9917d","type":"ui_button","z":"cec03951.a6d398","name":"date","group":"b98919d9.73de08","order":8,"width":"3","height":"1","passthru":false,"label":"Date","color":"","bgcolor":"","icon":"","payload":"_date","payloadType":"str","topic":"","x":609.1111717224121,"y":266.88891887664795,"wires":[["b1a7a70e.0d6b08"]]},{"id":"b1a7a70e.0d6b08","type":"function","z":"cec03951.a6d398","name":"Filter","func":"global.set(\"filter\",msg.payload);\nreturn msg;\n","outputs":1,"noerr":0,"x":633.1111717224121,"y":365.88891887664795,"wires":[["4b7f933f.86456c","c9d91904.724998"]]},{"id":"4b7f933f.86456c","type":"debug","z":"cec03951.a6d398","name":"filter","active":true,"console":"false","complete":"payload","x":785.1111717224121,"y":346.88891887664795,"wires":[]},{"id":"d119f045.9498c","type":"ui_button","z":"cec03951.a6d398","name":"year","group":"b98919d9.73de08","order":5,"width":"3","height":"1","passthru":false,"label":"Year","color":"","bgcolor":"","icon":"","payload":"_year","payloadType":"str","topic":"","x":219.44451522827148,"y":264.222243309021,"wires":[["b1a7a70e.0d6b08"]]},{"id":"d9c34a91.73a728","type":"ui_button","z":"cec03951.a6d398","name":"month","group":"b98919d9.73de08","order":6,"width":"3","height":"1","passthru":false,"label":"Month","color":"","bgcolor":"","icon":"","payload":"_month","payloadType":"str","topic":"","x":352.1111717224121,"y":263.88891887664795,"wires":[["b1a7a70e.0d6b08"]]},{"id":"7f8b34f0.3a1b9c","type":"ui_button","z":"cec03951.a6d398","name":"week","group":"b98919d9.73de08","order":7,"width":"3","height":"1","passthru":false,"label":"Week","color":"","bgcolor":"","icon":"","payload":"_week","payloadType":"str","topic":"","x":485.1111717224121,"y":265.88891887664795,"wires":[["b1a7a70e.0d6b08"]]},{"id":"cc7c52b.6ce47b","type":"ui_button","z":"cec03951.a6d398","name":"hour","group":"b98919d9.73de08","order":9,"width":"3","height":"1","passthru":false,"label":"hour","color":"","bgcolor":"","icon":"","payload":"_hour","payloadType":"str","topic":"","x":744.1111717224121,"y":265.88891887664795,"wires":[["b1a7a70e.0d6b08"]]},{"id":"47e73649.eb6848","type":"ui_button","z":"cec03951.a6d398","name":"Hour Trend","group":"b98919d9.73de08","order":10,"width":"3","height":"1","passthru":false,"label":"Hour Trend","color":"","bgcolor":"","icon":"","payload":"_hourtrend","payloadType":"str","topic":"","x":908.3333473205566,"y":267.3333492279053,"wires":[["b1a7a70e.0d6b08"]]},{"id":"3b27a313.4df1ac","type":"ui_button","z":"cec03951.a6d398","name":"Download","group":"b98919d9.73de08","order":4,"width":"1","height":"1","passthru":false,"label":"","color":"","bgcolor":"","icon":"fa-arrow-down","payload":"","payloadType":"str","topic":"","x":228.2223129272461,"y":556.444408416748,"wires":[[]]},{"id":"2e187edc.1cd4b2","type":"debug","z":"cec03951.a6d398","name":"","active":true,"console":"false","complete":"false","x":851.4445343017578,"y":676.6667098999023,"wires":[]},{"id":"8e7b0853.2d86d8","type":"debug","z":"cec03951.a6d398","name":"date","active":true,"console":"false","complete":"payload","x":941.4444427490234,"y":115.44445419311523,"wires":[]},{"id":"cbcabbca.fa1ef8","type":"comment","z":"cec03951.a6d398","name":"Weather Station","info":"This is the flow for Weather Station Dashboard containing 4 signals i.e.\nNumericID 320000, 32000002, 3200003, 3200004, 3200008","x":515.5000305175781,"y":32,"wires":[]},{"id":"e9f32810.7aa8b8","type":"comment","z":"cec03951.a6d398","name":"Resolution Filter","info":"","x":250,"y":205.55555555555554,"wires":[]},{"id":"383eb41b.f87f2c","type":"comment","z":"cec03951.a6d398","name":"3. All the four signals together for the Weather Station based on selected resolution filter","info":"","x":464.6666717529297,"y":489.66668701171875,"wires":[]},{"id":"204e7ee7.b91352","type":"OpcUa-Client","z":"cec03951.a6d398","endpoint":"c37e085a.8bf968","action":"subscribe","time":"4","timeUnit":"s","name":"","x":463,"y":1868,"wires":[["fb9f8f03.ff78d","42eaa331.9f5f1c"]]},{"id":"fb9f8f03.ff78d","type":"debug","z":"cec03951.a6d398","name":"","active":false,"console":"false","complete":"payload","x":736.010009765625,"y":1923,"wires":[]},{"id":"42eaa331.9f5f1c","type":"ui_text","z":"cec03951.a6d398","group":"4019201.c1b26e","order":1,"width":"6","height":"2","name":"Outside Live Temperature","label":"Ambient Temperature","format":"<font size=\"10\" color=\"white\">{{  msg.payload | uppercase }} &degC</font>","layout":"col-center","x":783.010009765625,"y":1830,"wires":[]},{"id":"61cee2ba.fc4fec","type":"inject","z":"cec03951.a6d398","name":"Meteo.Aussentemperatur","topic":"ns=20;s=MET51.strMET51Read.strWetterstation.strStation1.lrLufttemperatur","payload":"","payloadType":"num","repeat":"5","crontab":"","once":false,"x":185.010009765625,"y":1856.4999694824219,"wires":[["204e7ee7.b91352"]]},{"id":"807e39c1.8f81c8","type":"comment","z":"cec03951.a6d398","name":"1. Live Datafrom OPC UA","info":"This data is taken from OPC UA.","x":145,"y":1769,"wires":[]},{"id":"e7f2956f.fbbc08","type":"comment","z":"cec03951.a6d398","name":"1.1 Ambient Temperature 3200000","info":"","x":181,"y":1820,"wires":[]},{"id":"d1cad852.685d68","type":"ui_text","z":"cec03951.a6d398","group":"4019201.c1b26e","order":3,"width":"6","height":"2","name":"Outside Absolute Pressure","label":"Absolute Air Pressure","format":"<font size=\"10\" color=\"white\">{{  msg.payload | uppercase }} hPa</font>","layout":"col-center","x":798,"y":1990,"wires":[]},{"id":"718ae66f.cf4d78","type":"OpcUa-Client","z":"cec03951.a6d398","endpoint":"c37e085a.8bf968","action":"subscribe","time":"4","timeUnit":"s","name":"","x":467.989990234375,"y":2028,"wires":[["74cc26d7.fa1108","d1cad852.685d68"]]},{"id":"74cc26d7.fa1108","type":"debug","z":"cec03951.a6d398","name":"","active":false,"console":"false","complete":"payload","x":741,"y":2083,"wires":[]},{"id":"181a39ef.4ab446","type":"inject","z":"cec03951.a6d398","name":"Meteo.Absolutepressure","topic":"ns=20;s=MET51.strMET51Read.strWetterstation.strStation1.lrAbsoluterLuftdruck","payload":"","payloadType":"num","repeat":"5","crontab":"","once":false,"x":180,"y":2016.4999694824219,"wires":[["718ae66f.cf4d78"]]},{"id":"17dc71d3.aba08e","type":"ui_text","z":"cec03951.a6d398","group":"4019201.c1b26e","order":2,"width":"6","height":"2","name":"Outside Relative Humidity","label":"Relative Humidity","format":"<font size=\"10\" color=\"white\">{{  msg.payload | uppercase }} %</font>","layout":"col-center","x":777,"y":2119,"wires":[]},{"id":"aa0561c1.6cf69","type":"OpcUa-Client","z":"cec03951.a6d398","endpoint":"c37e085a.8bf968","action":"subscribe","time":"4","timeUnit":"s","name":"","x":456.989990234375,"y":2157,"wires":[["a570221f.f758d","17dc71d3.aba08e"]]},{"id":"a570221f.f758d","type":"debug","z":"cec03951.a6d398","name":"","active":false,"console":"false","complete":"payload","x":730,"y":2212,"wires":[]},{"id":"1e39318c.dba82e","type":"inject","z":"cec03951.a6d398","name":"Meteo.RelativeHumidity","topic":"ns=20;s=MET51.strMET51Read.strWetterstation.strStation1.lrRelativeFeuchte","payload":"","payloadType":"num","repeat":"5","crontab":"","once":false,"x":169,"y":2145.499969482422,"wires":[["aa0561c1.6cf69"]]},{"id":"433ab58.223194c","type":"ui_text","z":"cec03951.a6d398","group":"4019201.c1b26e","order":4,"width":"6","height":"2","name":"OutsideWind Speed","label":"Wind Speed","format":"<font size=\"10\" color=\"white\">{{  msg.payload | uppercase }} m/s</font>","layout":"col-center","x":761,"y":2286,"wires":[]},{"id":"5a8da7e1.5e43e8","type":"OpcUa-Client","z":"cec03951.a6d398","endpoint":"c37e085a.8bf968","action":"subscribe","time":"4","timeUnit":"s","name":"","x":450.989990234375,"y":2324,"wires":[["6d90f635.793788","433ab58.223194c"]]},{"id":"6d90f635.793788","type":"debug","z":"cec03951.a6d398","name":"","active":false,"console":"false","complete":"payload","x":724,"y":2379,"wires":[]},{"id":"dde7698a.fa1028","type":"inject","z":"cec03951.a6d398","name":"Meteo.windspeed","topic":"ns=20;s=MET51.strMET51Read.strWetterstation.strStation1.lrWindgeschwindigkeit","payload":"","payloadType":"num","repeat":"5","crontab":"","once":false,"x":143,"y":2312.499969482422,"wires":[["5a8da7e1.5e43e8"]]},{"id":"857af3d3.86031","type":"ui_text","z":"cec03951.a6d398","group":"4019201.c1b26e","order":5,"width":"6","height":"2","name":"Outside Global Solar Radiation","label":"Global Solar Radiation","format":"<font size=\"10\" color=\"white\">{{  msg.payload | uppercase}} W/m2</font>","layout":"col-center","x":789,"y":2460,"wires":[]},{"id":"f0d76d67.017f3","type":"OpcUa-Client","z":"cec03951.a6d398","endpoint":"c37e085a.8bf968","action":"subscribe","time":"4","timeUnit":"s","name":"","x":448.989990234375,"y":2498,"wires":[["69783415.a2d02c","857af3d3.86031"]]},{"id":"69783415.a2d02c","type":"debug","z":"cec03951.a6d398","name":"","active":false,"console":"false","complete":"payload","x":722,"y":2553,"wires":[]},{"id":"8a808225.4e0e1","type":"inject","z":"cec03951.a6d398","name":"Meteo.globalsolarradiation","topic":"ns=20;s=MET51.strMET51Read.strWetterstation.strStation1.lrGlobalstrahlung","payload":"","payloadType":"num","repeat":"5","crontab":"","once":false,"x":171,"y":2486.499969482422,"wires":[["f0d76d67.017f3"]]},{"id":"beb15fc6.e132c","type":"comment","z":"cec03951.a6d398","name":"1.3 absolute pressure 3200003","info":"","x":174,"y":1968,"wires":[]},{"id":"7c080078.8b9a6","type":"comment","z":"cec03951.a6d398","name":"1.2 relative humidity 3200002","info":"","x":156,"y":2095,"wires":[]},{"id":"ed6490f3.4d242","type":"comment","z":"cec03951.a6d398","name":"1.4 wind speed 3200004","info":"","x":157,"y":2272,"wires":[]},{"id":"df2f2212.7967a","type":"comment","z":"cec03951.a6d398","name":"1.5 global solar radiation 3200008","info":"","x":180,"y":2430,"wires":[]},{"id":"35da1a94.134386","type":"comment","z":"cec03951.a6d398","name":"2. Getting the data from SQL DB for current day for 24 hr","info":"","x":249,"y":792,"wires":[]},{"id":"e522719d.ca358","type":"delay","z":"cec03951.a6d398","name":"","pauseType":"delay","timeout":"300","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":263,"y":904,"wires":[["9d67ffeb.dcb9a"]]},{"id":"9d67ffeb.dcb9a","type":"function","z":"cec03951.a6d398","name":"live_data_query","func":"\n  var q1 = \"SELECT AVG(TRY_CAST(_VALUE as FLOAT)) as avg_temp  , DATEPART( hour, _TIMESTAMP ) as _hour  from  [NestTest].[dbo].[KepMET51] \"+\n          \"where _TIMESTAMP >= CONVERT (date, GETDATE())  AND \"+\n           \"kepMet51._NUMERICID= \"+ \"3200000\" +\n          \" AND TRY_CAST(_VALUE AS FLOAT) < 100 \"+\n          \"group by  DATEPART( hour, _TIMESTAMP ) order by _hour asc\";  \n\n \nmsg.payload = q1;\nreturn msg;","outputs":1,"noerr":0,"x":501.63641357421875,"y":902.3636474609375,"wires":[["d402c244.bd2"]]},{"id":"d402c244.bd2","type":"MSSQL","z":"cec03951.a6d398","mssqlCN":"9534cec8.3799d","name":"NEST","query":"","outField":"payload","x":733.1818237304688,"y":875.6363525390625,"wires":[["60c1a545.f87dfc","17840956.f0c577"]]},{"id":"17840956.f0c577","type":"function","z":"cec03951.a6d398","name":"Data Converter","func":"var today = (new Date()).toISOString().slice(0,10).replace(/-/g,\"-\");\nvar desc = \"ambient temperature\";\nvar year = \"Hourly Live Data for \"+ desc ;\nvar data = msg.payload;\nvar numericID2 = \"3200000\";\nvar unit = \"*C\";\nmsg.paylaod = [];\nvar value = [];\nvar date = [];\nfor(var i = 0; i < data.length;i++){\n    value.push(data[i].avg_temp);\n    date.push(data[i]._hour);\n}\n    \n\n        \nmsg.payload = [value,date,numericID2,year,desc, today,unit];\n\nreturn msg;","outputs":1,"noerr":0,"x":988.6363525390625,"y":914.45458984375,"wires":[["7d754928.32a118","6933bfe6.82dd2"]]},{"id":"60c1a545.f87dfc","type":"debug","z":"cec03951.a6d398","name":"Live data","active":true,"console":"false","complete":"payload","x":971.9091186523438,"y":872.727294921875,"wires":[]},{"id":"7d754928.32a118","type":"debug","z":"cec03951.a6d398","name":"live highcharts","active":true,"console":"false","complete":"payload","x":1214.727294921875,"y":944.3636474609375,"wires":[]},{"id":"bbcc9645.fae198","type":"comment","z":"cec03951.a6d398","name":"2.1 Ambient Temperature 3200000","info":"","x":179,"y":847,"wires":[]},{"id":"41bd18d0.150db8","type":"comment","z":"cec03951.a6d398","name":"2.2 relative humidity 3200002","info":"","x":160,"y":976,"wires":[]},{"id":"b81f377.c43b4c8","type":"delay","z":"cec03951.a6d398","name":"","pauseType":"delay","timeout":"350","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":253,"y":1080,"wires":[["f3c403e.54414"]]},{"id":"f3c403e.54414","type":"function","z":"cec03951.a6d398","name":"live_data_query","func":"\n  var q1 = \"SELECT AVG(TRY_CAST(_VALUE as FLOAT)) as avg_temp  , DATEPART( hour, _TIMESTAMP ) as _hour  from  [NestTest].[dbo].[KepMET51] \"+\n          \"where _TIMESTAMP >= CONVERT (date, GETDATE())  AND \"+\n           \"kepMet51._NUMERICID= \"+ \"3200002\" +\n          \" AND TRY_CAST(_VALUE AS FLOAT) < 100 \"+\n          \"group by  DATEPART( hour, _TIMESTAMP ) order by _hour asc\";  \n\n \nmsg.payload = q1;\nreturn msg;","outputs":1,"noerr":0,"x":491.63641357421875,"y":1078.3636474609375,"wires":[["10a2bb01.807235"]]},{"id":"10a2bb01.807235","type":"MSSQL","z":"cec03951.a6d398","mssqlCN":"9534cec8.3799d","name":"NEST","query":"","outField":"payload","x":723.1818237304688,"y":1051.6363525390625,"wires":[["35bdf13b.b0b76e","9b1e1bcd.ca3428"]]},{"id":"35bdf13b.b0b76e","type":"debug","z":"cec03951.a6d398","name":"Live data","active":true,"console":"false","complete":"payload","x":961.9091186523438,"y":1048.727294921875,"wires":[]},{"id":"9b1e1bcd.ca3428","type":"function","z":"cec03951.a6d398","name":"Data Converter","func":"var today = (new Date()).toISOString().slice(0,10).replace(/-/g,\"-\");\nvar desc = \"Relative Humidity\";\nvar year = \"Hourly Live Data for \"+ desc ;\nvar data = msg.payload;\nvar numericID2 = \"3200002\";\nvar unit = \"%\";\nmsg.paylaod = [];\nvar value = [];\nvar date = [];\nfor(var i = 0; i < data.length;i++){\n    value.push(data[i].avg_temp);\n    date.push(data[i]._hour);\n}\n    \n\n        \nmsg.payload = [value,date,numericID2,year,desc, today ,unit];\n\nreturn msg;","outputs":1,"noerr":0,"x":978.6363525390625,"y":1090.45458984375,"wires":[["ca4060c5.eab98","2265ad1a.8347d2"]]},{"id":"ca4060c5.eab98","type":"debug","z":"cec03951.a6d398","name":"live highcharts","active":true,"console":"false","complete":"payload","x":1187.727294921875,"y":1120.3636474609375,"wires":[]},{"id":"6933bfe6.82dd2","type":"ui_template","z":"cec03951.a6d398","group":"4019201.c1b26e","name":"live charts","order":0,"width":"6","height":"4","format":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n</head>\n<body>\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\n<div id=\"container2\" style=\"min-width: 290px; height: 190px; margin: 0 auto\"></div>\n<script>\n(function(scope) {\n        scope.$watch('msg.payload', function(dataseries) {\n            \n    Highcharts.chart('container2', {\n    chart: {\n        backgroundColor: {\n         linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n         stops: [\n            [0, '#121212'],\n            [1, '#121212']\n         ]\n      },\n        type: 'line'\n    },\n    title: {\n        style: {\n         color: '#E0E0E3',\n         fontSize: '10px'\n      },\n        text: dataseries[3]\n    },\n    colors: ['#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066', '#eeaaee',\n      '#55BF3B', '#DF5353', '#7798BF', '#aaeeee', '#2b908f'],\n    subtitle: {\n        style: {\n         color: '#E0E0E3',\n         fontSize: '8px'\n      },\n        text:  \"Today = \" + \"'\" + dataseries[5] + \"'\" + \" Empa NEST\"\n    },\n    xAxis: {\n        gridLineColor: '#707073',\n      labels: {\n         style: {\n            color: '#E0E0E3',\n            fontSize: '8px'\n         }\n      },\n      lineColor: '#707073',\n      minorGridLineColor: '#505053',\n      tickColor: '#707073',\n      title: {\n         style: {\n            color: '#A0A0A3',\n            fontSize: '8px'\n         }\n      },\n        categories:dataseries[1],\n        crosshair: true\n    },\n    yAxis: {\n        title: {\n            text: 'Average Value',\n            style: {\n            color: '#A0A0A3',\n            fontSize: '8px'\n         }\n        }\n    },\n    tooltip: {\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n            '<td style=\"padding:0\"><b>{point.y:.1f} '+dataseries[6]+'</b></td></tr>',\n        footerFormat: '</table>',\n        shared: true,\n        useHTML: true,\n        backgroundColor: 'rgba(0, 0, 0, 0.85)',\n      style: {\n         color: '#F0F0F0'\n      }\n    },\n    plotOptions: {\n        column: {\n            pointPadding: 0.2,\n            borderWidth: 0\n        }\n    },\n     legend: {\n      itemStyle: {\n         color: '#E0E0E3',\n         fontSize: '10px'\n      },\n      itemHoverStyle: {\n         color: '#FFF'\n      },\n      itemHiddenStyle: {\n         color: '#606063'\n      }\n   },\n    series: [ {\n        name: dataseries[4],\n        data: dataseries[0]\n    }]\n});\n        });\n    })(scope);\n</script>\n\n</body>\n</html>","storeOutMessages":true,"fwdInMessages":true,"x":1199,"y":881,"wires":[[]]},{"id":"2265ad1a.8347d2","type":"ui_template","z":"cec03951.a6d398","group":"4019201.c1b26e","name":"live charts","order":0,"width":"6","height":"4","format":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n</head>\n<body>\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\n<div id=\"container3\" style=\"min-width: 290px; height: 190px; margin: 0 auto\"></div>\n<script>\n(function(scope) {\n        scope.$watch('msg.payload', function(dataseries) {\n            \n    Highcharts.chart('container3', {\n    chart: {\n        backgroundColor: {\n         linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n         stops: [\n            [0, '#121212'],\n            [1, '#121212']\n         ]\n      },\n        type: 'line'\n    },\n    title: {\n        style: {\n         color: '#E0E0E3',\n         fontSize: '10px'\n      },\n        text: dataseries[3]\n    },\n    colors: ['#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066', '#eeaaee',\n      '#55BF3B', '#DF5353', '#7798BF', '#aaeeee', '#2b908f'],\n    subtitle: {\n        style: {\n         color: '#E0E0E3',\n         fontSize: '8px'\n      },\n        text:  \"Today = \" + \"'\" + dataseries[5] + \"'\" + \" Empa NEST\"\n    },\n    xAxis: {\n        gridLineColor: '#707073',\n      labels: {\n         style: {\n            color: '#E0E0E3',\n            fontSize: '8px'\n         }\n      },\n      lineColor: '#707073',\n      minorGridLineColor: '#505053',\n      tickColor: '#707073',\n      title: {\n         style: {\n            color: '#A0A0A3',\n            fontSize: '8px'\n         }\n      },\n        categories:dataseries[1],\n        crosshair: true\n    },\n    yAxis: {\n        title: {\n            text: 'Average Value',\n            style: {\n            color: '#A0A0A3',\n            fontSize: '8px'\n         }\n        }\n    },\n    tooltip: {\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n            '<td style=\"padding:0\"><b>{point.y:.1f} '+dataseries[6]+'</b></td></tr>',\n        footerFormat: '</table>',\n        shared: true,\n        useHTML: true,\n        backgroundColor: 'rgba(0, 0, 0, 0.85)',\n      style: {\n         color: '#F0F0F0'\n      }\n    },\n    plotOptions: {\n        column: {\n            pointPadding: 0.2,\n            borderWidth: 0\n        }\n    },\n     legend: {\n      itemStyle: {\n         color: '#E0E0E3',\n         fontSize: '10px'\n      },\n      itemHoverStyle: {\n         color: '#FFF'\n      },\n      itemHiddenStyle: {\n         color: '#606063'\n      }\n   },\n    series: [ {\n        name: dataseries[4],\n        data: dataseries[0]\n    }]\n});\n        });\n    })(scope);\n</script>\n\n</body>\n</html>","storeOutMessages":true,"fwdInMessages":true,"x":1182,"y":1029,"wires":[[]]},{"id":"8c296c7.7dfd29","type":"delay","z":"cec03951.a6d398","name":"","pauseType":"delay","timeout":"400","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":252,"y":1239,"wires":[["50d686cc.ea83a8"]]},{"id":"c2317b51.ee90a8","type":"ui_template","z":"cec03951.a6d398","group":"4019201.c1b26e","name":"live charts","order":0,"width":"6","height":"4","format":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n</head>\n<body>\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\n<div id=\"container4\" style=\"min-width: 290px; height: 190px; margin: 0 auto\"></div>\n<script>\n(function(scope) {\n        scope.$watch('msg.payload', function(dataseries) {\n            \n    Highcharts.chart('container4', {\n    chart: {\n        backgroundColor: {\n         linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n         stops: [\n            [0, '#121212'],\n            [1, '#121212']\n         ]\n      },\n        type: 'line'\n    },\n    title: {\n        style: {\n         color: '#E0E0E3',\n         fontSize: '10px'\n      },\n        text: dataseries[3]\n    },\n    colors: ['#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066', '#eeaaee',\n      '#55BF3B', '#DF5353', '#7798BF', '#aaeeee', '#2b908f'],\n    subtitle: {\n        style: {\n         color: '#E0E0E3',\n         fontSize: '8px'\n      },\n        text:  \"Today = \" + \"'\" + dataseries[5] + \"'\" + \" Empa NEST\"\n    },\n    xAxis: {\n        gridLineColor: '#707073',\n      labels: {\n         style: {\n            color: '#E0E0E3',\n            fontSize: '8px'\n         }\n      },\n      lineColor: '#707073',\n      minorGridLineColor: '#505053',\n      tickColor: '#707073',\n      title: {\n         style: {\n            color: '#A0A0A3',\n            fontSize: '8px'\n         }\n      },\n        categories:dataseries[1],\n        crosshair: true\n    },\n    yAxis: {\n        title: {\n            text: 'Average Value',\n            style: {\n            color: '#A0A0A3',\n            fontSize: '8px'\n         }\n        }\n    },\n    tooltip: {\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n            '<td style=\"padding:0\"><b>{point.y:.1f} '+dataseries[6]+'</b></td></tr>',\n        footerFormat: '</table>',\n        shared: true,\n        useHTML: true,\n        backgroundColor: 'rgba(0, 0, 0, 0.85)',\n      style: {\n         color: '#F0F0F0'\n      }\n    },\n    plotOptions: {\n        column: {\n            pointPadding: 0.2,\n            borderWidth: 0\n        }\n    },\n     legend: {\n      itemStyle: {\n         color: '#E0E0E3',\n         fontSize: '10px'\n      },\n      itemHoverStyle: {\n         color: '#FFF'\n      },\n      itemHiddenStyle: {\n         color: '#606063'\n      }\n   },\n    series: [ {\n        name: dataseries[4],\n        data: dataseries[0]\n    }]\n});\n        });\n    })(scope);\n</script>\n\n</body>\n</html>","storeOutMessages":true,"fwdInMessages":true,"x":1181,"y":1188,"wires":[[]]},{"id":"50d686cc.ea83a8","type":"function","z":"cec03951.a6d398","name":"live_data_query","func":"\n  var q1 = \"SELECT AVG(TRY_CAST(_VALUE as FLOAT)) as avg_temp  , DATEPART( hour, _TIMESTAMP ) as _hour  from  [NestTest].[dbo].[KepMET51] \"+\n          \"where _TIMESTAMP >= CONVERT (date, GETDATE())  AND \"+\n           \"kepMet51._NUMERICID= \"+ \"3200003\" +\n          \" AND TRY_CAST(_VALUE AS FLOAT) < 100 \"+\n          \"group by  DATEPART( hour, _TIMESTAMP ) order by _hour asc\";  \n\n \nmsg.payload = q1;\nreturn msg;","outputs":1,"noerr":0,"x":490.63641357421875,"y":1237.3636474609375,"wires":[["7a5d39f3.fa8428"]]},{"id":"7a5d39f3.fa8428","type":"MSSQL","z":"cec03951.a6d398","mssqlCN":"9534cec8.3799d","name":"NEST","query":"","outField":"payload","x":722.1818237304688,"y":1210.6363525390625,"wires":[["3125700b.7699","1e8fb464.d66c5c"]]},{"id":"3125700b.7699","type":"debug","z":"cec03951.a6d398","name":"Live data","active":true,"console":"false","complete":"payload","x":960.9091186523438,"y":1207.727294921875,"wires":[]},{"id":"1e8fb464.d66c5c","type":"function","z":"cec03951.a6d398","name":"Data Converter","func":"var today = (new Date()).toISOString().slice(0,10).replace(/-/g,\"-\");\nvar desc = \"Absolute Air Pressure\";\nvar year = \"Hourly Live Data for \"+ desc ;\nvar data = msg.payload;\nvar numericID2 = \"3200003\";\nvar unit = \"hPa\";\nmsg.paylaod = [];\nvar value = [];\nvar date = [];\nfor(var i = 0; i < data.length;i++){\n    value.push(data[i].avg_temp);\n    date.push(data[i]._hour);\n}\n    \n\n        \nmsg.payload = [value,date,numericID2,year,desc, today ,unit];\n\nreturn msg;","outputs":1,"noerr":0,"x":977.6363525390625,"y":1249.45458984375,"wires":[["d81c0c22.b47fc","c2317b51.ee90a8"]]},{"id":"d81c0c22.b47fc","type":"debug","z":"cec03951.a6d398","name":"live highcharts","active":true,"console":"false","complete":"payload","x":1186.727294921875,"y":1279.3636474609375,"wires":[]},{"id":"80b230f2.02421","type":"delay","z":"cec03951.a6d398","name":"","pauseType":"delay","timeout":"450","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":266,"y":1405,"wires":[["d503ade4.04ae5"]]},{"id":"c33b1828.5359b8","type":"ui_template","z":"cec03951.a6d398","group":"4019201.c1b26e","name":"live charts","order":0,"width":"6","height":"4","format":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n</head>\n<body>\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\n<div id=\"container5\" style=\"min-width: 290px; height: 190px; margin: 0 auto\"></div>\n<script>\n(function(scope) {\n        scope.$watch('msg.payload', function(dataseries) {\n            \n    Highcharts.chart('container5', {\n    chart: {\n        backgroundColor: {\n         linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n         stops: [\n            [0, '#121212'],\n            [1, '#121212']\n         ]\n      },\n        type: 'line'\n    },\n    title: {\n        style: {\n         color: '#E0E0E3',\n         fontSize: '10px'\n      },\n        text: dataseries[3]\n    },\n    colors: ['#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066', '#eeaaee',\n      '#55BF3B', '#DF5353', '#7798BF', '#aaeeee', '#2b908f'],\n    subtitle: {\n        style: {\n         color: '#E0E0E3',\n         fontSize: '8px'\n      },\n        text:  \"Today = \" + \"'\" + dataseries[5] + \"'\" + \" Empa NEST\"\n    },\n    xAxis: {\n        gridLineColor: '#707073',\n      labels: {\n         style: {\n            color: '#E0E0E3',\n            fontSize: '8px'\n         }\n      },\n      lineColor: '#707073',\n      minorGridLineColor: '#505053',\n      tickColor: '#707073',\n      title: {\n         style: {\n            color: '#A0A0A3',\n            fontSize: '8px'\n         }\n      },\n        categories:dataseries[1],\n        crosshair: true\n    },\n    yAxis: {\n        title: {\n            text: 'Average Value',\n            style: {\n            color: '#A0A0A3',\n            fontSize: '8px'\n         }\n        }\n    },\n    tooltip: {\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n            '<td style=\"padding:0\"><b>{point.y:.1f} '+dataseries[6]+'</b></td></tr>',\n        footerFormat: '</table>',\n        shared: true,\n        useHTML: true,\n        backgroundColor: 'rgba(0, 0, 0, 0.85)',\n      style: {\n         color: '#F0F0F0'\n      }\n    },\n    plotOptions: {\n        column: {\n            pointPadding: 0.2,\n            borderWidth: 0\n        }\n    },\n     legend: {\n      itemStyle: {\n         color: '#E0E0E3',\n         fontSize: '10px'\n      },\n      itemHoverStyle: {\n         color: '#FFF'\n      },\n      itemHiddenStyle: {\n         color: '#606063'\n      }\n   },\n    series: [ {\n        name: dataseries[4],\n        data: dataseries[0]\n    }]\n});\n        });\n    })(scope);\n</script>\n\n</body>\n</html>","storeOutMessages":true,"fwdInMessages":true,"x":1195,"y":1354,"wires":[[]]},{"id":"d503ade4.04ae5","type":"function","z":"cec03951.a6d398","name":"live_data_query","func":"\n  var q1 = \"SELECT AVG(TRY_CAST(_VALUE as FLOAT)) as avg_temp  , DATEPART( hour, _TIMESTAMP ) as _hour  from  [NestTest].[dbo].[KepMET51] \"+\n          \"where _TIMESTAMP >= CONVERT (date, GETDATE())  AND \"+\n           \"kepMet51._NUMERICID= \"+ \"3200002\" +\n          \" AND TRY_CAST(_VALUE AS FLOAT) < 100 \"+\n          \"group by  DATEPART( hour, _TIMESTAMP ) order by _hour asc\";  \n\n \nmsg.payload = q1;\nreturn msg;","outputs":1,"noerr":0,"x":504.63641357421875,"y":1403.3636474609375,"wires":[["9dcb2328.590c4"]]},{"id":"9dcb2328.590c4","type":"MSSQL","z":"cec03951.a6d398","mssqlCN":"9534cec8.3799d","name":"NEST","query":"","outField":"payload","x":736.1818237304688,"y":1376.6363525390625,"wires":[["d1e87003.17bd5","cd08bfc5.3a1ff"]]},{"id":"d1e87003.17bd5","type":"debug","z":"cec03951.a6d398","name":"Live data","active":true,"console":"false","complete":"payload","x":974.9091186523438,"y":1373.727294921875,"wires":[]},{"id":"cd08bfc5.3a1ff","type":"function","z":"cec03951.a6d398","name":"Data Converter","func":"var today = (new Date()).toISOString().slice(0,10).replace(/-/g,\"-\");\nvar desc = \"Wind Speed\";\nvar year = \"Hourly Live Data for \"+ desc ;\nvar data = msg.payload;\nvar numericID2 = \"3200004\";\nvar unit = \"m/s\";\nmsg.paylaod = [];\nvar value = [];\nvar date = [];\nfor(var i = 0; i < data.length;i++){\n    value.push(data[i].avg_temp);\n    date.push(data[i]._hour);\n}\n    \n\n        \nmsg.payload = [value,date,numericID2,year,desc, today ,unit];\n\nreturn msg;","outputs":1,"noerr":0,"x":991.6363525390625,"y":1415.45458984375,"wires":[["165fff5.ea3b201","c33b1828.5359b8"]]},{"id":"165fff5.ea3b201","type":"debug","z":"cec03951.a6d398","name":"live highcharts","active":true,"console":"false","complete":"payload","x":1200.727294921875,"y":1445.3636474609375,"wires":[]},{"id":"b112e2fa.a24a6","type":"delay","z":"cec03951.a6d398","name":"","pauseType":"delay","timeout":"500","timeoutUnits":"milliseconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":273,"y":1569,"wires":[["a103d828.05f268"]]},{"id":"5e0743ea.70156c","type":"ui_template","z":"cec03951.a6d398","group":"4019201.c1b26e","name":"live charts","order":0,"width":"6","height":"4","format":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n</head>\n<body>\n<script src=\"https://code.highcharts.com/highcharts.js\"></script>\n<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\n<div id=\"container6\" style=\"min-width: 290px; height: 190px; margin: 0 auto\"></div>\n<script>\n(function(scope) {\n        scope.$watch('msg.payload', function(dataseries) {\n            \n    Highcharts.chart('container6', {\n    chart: {\n        backgroundColor: {\n         linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n         stops: [\n            [0, '#121212'],\n            [1, '#121212']\n         ]\n      },\n        type: 'line'\n    },\n    title: {\n        style: {\n         color: '#E0E0E3',\n         fontSize: '10px'\n      },\n        text: dataseries[3]\n    },\n    colors: ['#90ee7e', '#f45b5b', '#7798BF', '#aaeeee', '#ff0066', '#eeaaee',\n      '#55BF3B', '#DF5353', '#7798BF', '#aaeeee', '#2b908f'],\n    subtitle: {\n        style: {\n         color: '#E0E0E3',\n         fontSize: '8px'\n      },\n        text:  \"Today = \" + \"'\" + dataseries[5] + \"'\" + \" Empa NEST\"\n    },\n    xAxis: {\n        gridLineColor: '#707073',\n      labels: {\n         style: {\n            color: '#E0E0E3',\n            fontSize: '8px'\n         }\n      },\n      lineColor: '#707073',\n      minorGridLineColor: '#505053',\n      tickColor: '#707073',\n      title: {\n         style: {\n            color: '#A0A0A3',\n            fontSize: '8px'\n         }\n      },\n        categories:dataseries[1],\n        crosshair: true\n    },\n    yAxis: {\n        title: {\n            text: 'Average Value',\n            style: {\n            color: '#A0A0A3',\n            fontSize: '8px'\n         }\n        }\n    },\n    tooltip: {\n        headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\n            '<td style=\"padding:0\"><b>{point.y:.1f} '+dataseries[6]+'</b></td></tr>',\n        footerFormat: '</table>',\n        shared: true,\n        useHTML: true,\n        backgroundColor: 'rgba(0, 0, 0, 0.85)',\n      style: {\n         color: '#F0F0F0'\n      }\n    },\n    plotOptions: {\n        column: {\n            pointPadding: 0.2,\n            borderWidth: 0\n        }\n    },\n     legend: {\n      itemStyle: {\n         color: '#E0E0E3',\n         fontSize: '10px'\n      },\n      itemHoverStyle: {\n         color: '#FFF'\n      },\n      itemHiddenStyle: {\n         color: '#606063'\n      }\n   },\n    series: [ {\n        name: dataseries[4],\n        data: dataseries[0]\n    }]\n});\n        });\n    })(scope);\n</script>\n\n</body>\n</html>","storeOutMessages":true,"fwdInMessages":true,"x":1202,"y":1518,"wires":[[]]},{"id":"a103d828.05f268","type":"function","z":"cec03951.a6d398","name":"live_data_query","func":"\n  var q1 = \"SELECT AVG(TRY_CAST(_VALUE as FLOAT)) as avg_temp  , DATEPART( hour, _TIMESTAMP ) as _hour  from  [NestTest].[dbo].[KepMET51] \"+\n          \"where _TIMESTAMP >= CONVERT (date, GETDATE())  AND \"+\n           \"kepMet51._NUMERICID= \"+ \"3200002\" +\n          \" AND TRY_CAST(_VALUE AS FLOAT) < 100 \"+\n          \"group by  DATEPART( hour, _TIMESTAMP ) order by _hour asc\";  \n\n \nmsg.payload = q1;\nreturn msg;","outputs":1,"noerr":0,"x":511.63641357421875,"y":1567.3636474609375,"wires":[["3604d20d.309bfe"]]},{"id":"3604d20d.309bfe","type":"MSSQL","z":"cec03951.a6d398","mssqlCN":"9534cec8.3799d","name":"NEST","query":"","outField":"payload","x":743.1818237304688,"y":1540.6363525390625,"wires":[["81f25615.50b188","4ef8868.7a7f578"]]},{"id":"81f25615.50b188","type":"debug","z":"cec03951.a6d398","name":"Live data","active":true,"console":"false","complete":"payload","x":981.9091186523438,"y":1537.727294921875,"wires":[]},{"id":"4ef8868.7a7f578","type":"function","z":"cec03951.a6d398","name":"Data Converter","func":"var today = (new Date()).toISOString().slice(0,10).replace(/-/g,\"-\");\nvar desc = \"Global Solar Radiation\";\nvar year = \"Hourly Live Data for \"+ desc ;\nvar data = msg.payload;\nvar numericID2 = \"3200008\";\nvar unit = \"W/m2\";\nmsg.paylaod = [];\nvar value = [];\nvar date = [];\nfor(var i = 0; i < data.length;i++){\n    value.push(data[i].avg_temp);\n    date.push(data[i]._hour);\n}\n    \n\n        \nmsg.payload = [value,date,numericID2,year,desc, today ,unit];\n\nreturn msg;","outputs":1,"noerr":0,"x":998.6363525390625,"y":1579.45458984375,"wires":[["1a35caab.b1e535","5e0743ea.70156c"]]},{"id":"1a35caab.b1e535","type":"debug","z":"cec03951.a6d398","name":"live highcharts","active":true,"console":"false","complete":"payload","x":1207.727294921875,"y":1609.3636474609375,"wires":[]},{"id":"b8c4a4d.0a6c858","type":"comment","z":"cec03951.a6d398","name":"2.3 absolute pressure 3200003","info":"","x":171,"y":1182,"wires":[]},{"id":"c62b77b7.e492e8","type":"comment","z":"cec03951.a6d398","name":"2.4 wind speed 3200004","info":"","x":157,"y":1358,"wires":[]},{"id":"de9597c6.7f79a8","type":"comment","z":"cec03951.a6d398","name":"2.5 global solar radiation 3200008","info":"","x":189,"y":1510,"wires":[]},{"id":"9534cec8.3799d","type":"MSSQL-CN","z":"","name":"NEST","server":"NEST-SQL-HIST","encyption":false,"database":"NestTest"},{"id":"b98919d9.73de08","type":"ui_group","z":"","name":"Resolution","tab":"4da99961.9bcc98","order":3,"disp":false,"width":"30"},{"id":"17f52cb8.1a3383","type":"ui_group","z":"","name":"graph","tab":"4da99961.9bcc98","order":2,"disp":false,"width":"30"},{"id":"c37e085a.8bf968","type":"OpcUa-Endpoint","z":"","endpoint":"opc.tcp://192.168.223.20:4851","login":false},{"id":"4019201.c1b26e","type":"ui_group","z":"","name":"OPC UA","tab":"4da99961.9bcc98","order":1,"disp":true,"width":"30"},{"id":"4da99961.9bcc98","type":"ui_tab","z":"","name":"Weather Station","icon":"dashboard"}]